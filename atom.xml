<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jiantao&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jiantaofu.github.io/"/>
  <updated>2016-05-30T02:12:52.000Z</updated>
  <id>http://jiantaofu.github.io/</id>
  
  <author>
    <name>Jiantao Fu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《The Pragmatic Programmer》读后感</title>
    <link href="http://jiantaofu.github.io/2016/05/29/%E3%80%8A%E7%A8%8B%E5%BA%8F%E5%91%98%E4%BF%AE%E7%82%BC%E4%B9%8B%E9%81%93%E3%80%8B%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    <id>http://jiantaofu.github.io/2016/05/29/《程序员修炼之道》读后感/</id>
    <published>2016-05-29T14:28:12.000Z</published>
    <updated>2016-05-30T02:12:52.000Z</updated>
    
    <content type="html">&lt;p&gt;这本书的副标题是From Journeyman to Master，中文翻译过来是”从小工到专家”，工作了近十年，回过头来再看这本书，发现这本书虽然从出版到现在已经近20年了，正如作者在09年的再版序言里说的:”Things Really Haven’t Changed That Much”，又一个十年过去了，书中的最佳实践放倒今天依然适用。虽然看副标题是推荐给新手的，但即便是从业多年的再读这本书也会颇有感触和共鸣。书已经有些年了，但亚马逊的书评2016年的都还有很多，里面不仅仅有新手，也有从业20+的架构师和经理。&lt;/p&gt;
&lt;p&gt;书的中文名翻译为”程序员修炼之道”，和中文名相去甚远，Pragmatic的中文应该是”务实的”，”务实的程序员”具备如下的一些特征:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;乐于尝试新事物，并能和自己已有的知识融合。&lt;/li&gt;
&lt;li&gt;好奇心，乐于提问，全面的理解更能帮助做出正确的决策。&lt;/li&gt;
&lt;li&gt;批判的思考，一定要知道为什么要这样做，是否合理。&lt;/li&gt;
&lt;li&gt;设法理解问题的本质，这样对解决问题所需的投入才会有比较现实的估计。&lt;/li&gt;
&lt;li&gt;多才多艺，工作要求也许仅仅需要某一方面的能力，但能够主动去熟悉更广泛的技术和环境，才能面对新的挑战。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而上面这些特征，使得程序员不局限于特定的技术，拥有广博的知识背景和广泛的工程实践经验为基础，才能在特定的情况下选择最好的解决方案。&lt;/p&gt;
&lt;h1 id=&quot;A-Pragmatic-Philosophy&quot;&gt;&lt;a href=&quot;#A-Pragmatic-Philosophy&quot; class=&quot;headerlink&quot; title=&quot;A Pragmatic Philosophy&quot;&gt;&lt;/a&gt;A Pragmatic Philosophy&lt;/h1&gt;&lt;p&gt;这些可以理解为基本修养的要求，涉及到态度，风格和思考问题的方式。&lt;/p&gt;
&lt;h2 id=&quot;态度&quot;&gt;&lt;a href=&quot;#态度&quot; class=&quot;headerlink&quot; title=&quot;态度&quot;&gt;&lt;/a&gt;态度&lt;/h2&gt;&lt;p&gt;对自己事情负责，永远不要为自己找借口，要去说做什么才能挽回局面，提供其它的选择，并想办法避免再次发生，记住解决问题才是第一位的。&lt;/p&gt;
&lt;h2 id=&quot;破窗户&quot;&gt;&lt;a href=&quot;#破窗户&quot; class=&quot;headerlink&quot; title=&quot;破窗户&quot;&gt;&lt;/a&gt;破窗户&lt;/h2&gt;&lt;p&gt;不要容忍破窗户。发现一个修一个。&lt;/p&gt;
&lt;p&gt;一扇破窗户，只要有那么一段时间不修理，就会渐渐给居民带来一种废弃感，一种职权部门都不关心这座建筑的感觉。于是又一扇窗户破了。人们开始乱扔垃圾。出现了乱涂乱画。严重的结构损坏开始了。在相对较短的一段时间里，建筑就被损毁得超出了业主愿意修理的程度，而废弃感也就变成了现实，有些居民也就搬走了。&lt;/p&gt;
&lt;p&gt;同样的道理: 如果团队和项目的代码十分漂亮整洁，设计精良优雅，你也会格外注意不去把它弄脏，也不想成为第一个弄脏东西的人。&lt;/p&gt;
&lt;h2 id=&quot;石头汤&quot;&gt;&lt;a href=&quot;#石头汤&quot; class=&quot;headerlink&quot; title=&quot;石头汤&quot;&gt;&lt;/a&gt;石头汤&lt;/h2&gt;&lt;p&gt;整个系统就在你的眼前，你知道它是对的，但请求许可去处理整个事情，你会遇到拖延和漠然。大家要设立委员会，预算需要批准，事情会变得复杂，每个人都会守护他们自己的资源。&lt;/p&gt;
&lt;p&gt;这就是拿出石头的时候了，在”忽悠”他人加入前，你需要有其他人看的见的东西，”石头汤”本不是什么美味，但它是一个催化剂，有了它，你可以”忽悠”他人说:”如果我们增加……会更好”，来团结其他人来协作，做到单靠他们自己做不到的事情。最后每个人都是赢家。&lt;/p&gt;
&lt;p&gt;让人们参与正在发生的成功更容易，让他们瞥见未来，你就能让他们聚集在你周围。&lt;/p&gt;
&lt;h2 id=&quot;煮青蛙&quot;&gt;&lt;a href=&quot;#煮青蛙&quot; class=&quot;headerlink&quot; title=&quot;煮青蛙&quot;&gt;&lt;/a&gt;煮青蛙&lt;/h2&gt;&lt;p&gt;要持续不断的观察周围发生的事情，而不只是你自己在做的事情。&lt;/p&gt;
&lt;h2 id=&quot;足够好的软件&quot;&gt;&lt;a href=&quot;#足够好的软件&quot; class=&quot;headerlink&quot; title=&quot;足够好的软件&quot;&gt;&lt;/a&gt;足够好的软件&lt;/h2&gt;&lt;p&gt;不求完美，只求足够好。这里并非意味着不整洁和糟糕的代码而是因为外在的约束条件，使得你需要作出现实的权衡。外在的约束条件包括:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;性能的硬性要求&lt;/li&gt;
&lt;li&gt;交付时间&lt;/li&gt;
&lt;li&gt;现金流&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天了不起的软件常常比明天的完美软件更可取，如果你给用户某样东西，让他们及早适用，他们的反馈常常会把你引向更好的最终解决方案。&lt;/p&gt;
&lt;h2 id=&quot;知识资产&quot;&gt;&lt;a href=&quot;#知识资产&quot; class=&quot;headerlink&quot; title=&quot;知识资产&quot;&gt;&lt;/a&gt;知识资产&lt;/h2&gt;&lt;p&gt;知识上的投资总能得到最好的回报。知识和经验是你最重要的职业财富，但你要能够区分哪些是有实效的，新技术的出现也许会让那些知识变的过时，而不断变化的市场驱动也许会使得那些经验变的陈旧和无关紧要。知识的价值降低，也直接体现在个人价值上。&lt;/p&gt;
&lt;p&gt;知识资产和金融资产的管理有很多相似的地方:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;习惯性的定期投资。&lt;/li&gt;
&lt;li&gt;多元化，能更好的进行调整，赶上变化。&lt;/li&gt;
&lt;li&gt;管理风险，学什么，花多少精力去学。&lt;/li&gt;
&lt;li&gt;低买高卖，在新技术流行前学习就好比买被低估的股票。&lt;/li&gt;
&lt;li&gt;周期性的评估和平衡资产，批判的思考。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;交流&quot;&gt;&lt;a href=&quot;#交流&quot; class=&quot;headerlink&quot; title=&quot;交流&quot;&gt;&lt;/a&gt;交流&lt;/h2&gt;&lt;p&gt;没有有效的交流，一个好的想法就只是一个无人关系的孤儿。你需要了解听众的需要，兴趣和能力。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你想说什么&lt;/li&gt;
&lt;li&gt;了解听众&lt;/li&gt;
&lt;li&gt;选择时机&lt;/li&gt;
&lt;li&gt;选择风格&lt;/li&gt;
&lt;li&gt;让文件美观&lt;/li&gt;
&lt;li&gt;让听众参与&lt;/li&gt;
&lt;li&gt;做倾听者&lt;/li&gt;
&lt;li&gt;回复他人&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;了解听众的WISDOM法则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;W&lt;/strong&gt;hat do they want to learn&lt;/li&gt;
&lt;li&gt;What is their &lt;strong&gt;I&lt;/strong&gt;ntrest&lt;/li&gt;
&lt;li&gt;How &lt;strong&gt;S&lt;/strong&gt;ophisticated are they&lt;/li&gt;
&lt;li&gt;How much &lt;strong&gt;D&lt;/strong&gt;etail do they want&lt;/li&gt;
&lt;li&gt;Whom do you want to &lt;strong&gt;O&lt;/strong&gt;wn the information&lt;/li&gt;
&lt;li&gt;How can you &lt;strong&gt;M&lt;/strong&gt;otivate them to listen to you&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Pragmatic-Software-Development-Tips&quot;&gt;&lt;a href=&quot;#Pragmatic-Software-Development-Tips&quot; class=&quot;headerlink&quot; title=&quot;Pragmatic Software Development Tips&quot;&gt;&lt;/a&gt;Pragmatic Software Development Tips&lt;/h1&gt;&lt;p&gt;下面是这本书给出的一些Tips，涵盖了本书所涉及到的所有相关主题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Care About Your Craft&lt;/strong&gt;&lt;br&gt;Why spend your life developing software unless you care about doing it well?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Provide Options, Don’t Make Lame Excuses&lt;/strong&gt;&lt;br&gt;Instead of excuses, provide options. Don’t say it can’t be done; explain what can be done.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Be a Catalyst for Change&lt;/strong&gt;&lt;br&gt;You can’t force change on people. Instead, show them how the future might be and help them participate in creating it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Make Quality a Requirements Issue&lt;/strong&gt;&lt;br&gt;Involve your users in determining the project’s real quality requirements.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Critically Analyze What You Read and Hear&lt;/strong&gt;&lt;br&gt;Don’t be swayed by vendors, media hype, or dogma. Analyze information in terms of you and your project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DRY—Don’t Repeat Yourself&lt;/strong&gt;&lt;br&gt;Every piece of knowledge must have a single, unambiguous, authoritative representation within a system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Eliminate Effects Between Unrelated Things&lt;/strong&gt;&lt;br&gt;Design components that are self-contained, independent, and have a single, well-defined purpose.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use Tracer Bullets to Find the Target&lt;/strong&gt;&lt;br&gt;Tracer bullets let you home in on your target by trying things and seeing how close they land.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Program Close to the Problem Domain&lt;/strong&gt;&lt;br&gt;Design and code in your user’s language.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Iterate the Schedule with the Code&lt;/strong&gt;&lt;br&gt;Use experience you gain as you implement to refine the project time scales.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use the Power of Command Shells&lt;/strong&gt;&lt;br&gt;Use the shell when graphical user interfaces don’t cut it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Always Use Source Code Control&lt;/strong&gt;&lt;br&gt;Source code control is a time machine for your work—you can go back.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don’t Panic When Debugging&lt;/strong&gt;&lt;br&gt;Take a deep breath and THINK! about what could be causing the bug.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don’t Assume It—Prove It&lt;/strong&gt;&lt;br&gt;Prove your assumptions in the actual environment—with real data and boundary conditions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Write Code That Writes Code&lt;/strong&gt;&lt;br&gt;Code generators increase your productivity and help avoid duplication.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Design with Contracts&lt;/strong&gt;&lt;br&gt;Use contracts to document and verify that code does no more and no less than it claims to do.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use Assertions to Prevent the Impossible&lt;/strong&gt;&lt;br&gt;Assertions validate your assumptions. Use them to protect your code from an uncertain world.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Finish What You Start&lt;/strong&gt;&lt;br&gt;Where possible, the routine or object that allocates a resource should be responsible for deallocating it.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Configure, Don’t Integrate&lt;/strong&gt;&lt;br&gt;Implement technology choices for an application as configuration options, not through integration or engineering.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Analyze Workflow to Improve Concurrency&lt;/strong&gt;&lt;br&gt;Exploit concurrency in your user’s workflow.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Always Design for Concurrency&lt;/strong&gt;&lt;br&gt;Allow for concurrency, and you’ll design cleaner interfaces with fewer assumptions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use Blackboards to Coordinate Workflow&lt;/strong&gt;&lt;br&gt;Use blackboards to coordinate disparate facts and agents, while maintaining independence and isolation among participants.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Estimate the Order of Your Algorithms&lt;/strong&gt;&lt;br&gt;Get a feel for how long things are likely to take before you write code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Refactor Early, Refactor Often&lt;/strong&gt;&lt;br&gt;Just as you might weed and rearrange a garden, rewrite, rework, and re-architect code when it needs it. Fix the root of the problem.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Test Your Software, or Your Users Will&lt;/strong&gt;&lt;br&gt;Test ruthlessly. Don’t make your users find bugs for you.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don’t Gather Requirements—Dig for Them&lt;/strong&gt;&lt;br&gt;Requirements rarely lie on the surface. They’re buried deep beneath layers of assumptions, misconceptions, and politics.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstractions Live Longer than Details&lt;/strong&gt;&lt;br&gt;Invest in the abstraction, not the implementation. Abstractions can survive the barrage of changes from different implementations and new technologies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don’t Think Outside the Box—Find the Box&lt;/strong&gt;&lt;br&gt;When faced with an impossible problem, identify the real constraints. Ask yourself: “Does it have to be done this way? Does it have to be done at all?”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Some Things Are Better Done than Described&lt;/strong&gt;&lt;br&gt;Don’t fall into the specification spiral—at some point you need to start coding.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Costly Tools Don’t Produce Better Designs&lt;/strong&gt;&lt;br&gt;Beware of vendor hype, industry dogma, and the aura of the price tag. Judge tools on their merits.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don’t Use Manual Procedures&lt;/strong&gt;&lt;br&gt;A shell script or batch file will execute the same instructions, in the same order, time after time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Coding Ain’t Done ‘Til All the Tests Run&lt;/strong&gt;&lt;br&gt;‘Nuff said.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Test State Coverage, Not Code Coverage&lt;/strong&gt;&lt;br&gt;Identify and test significant program states. Just testing lines of code isn’t enough.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;English is Just a Programming Language&lt;/strong&gt;&lt;br&gt;Write documents as you would write code: honor the DRY principle, use metadata, MVC, automatic generation, and so on.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gently Exceed Your Users’ Expectations&lt;/strong&gt;&lt;br&gt;Come to understand your users’ expectations, then deliver just that little bit more.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Think! About Your Work&lt;/strong&gt;&lt;br&gt;Turn off the autopilot and take control. Constantly critique and appraise your work.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don’t Live with Broken Windows&lt;/strong&gt;&lt;br&gt;Fix bad designs, wrong decisions, and poor code when you see them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Remember the Big Picture&lt;/strong&gt;&lt;br&gt;Don’t get so engrossed in the details that you forget to check what’s happening around you.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Invest Regularly in Your Knowledge Portfolio&lt;/strong&gt;&lt;br&gt;Make learning a habit.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It’s Both What You Say and the Way You Say It&lt;/strong&gt;&lt;br&gt;There’s no point in having great ideas if you don’t communicate them effectively.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Make It Easy to Reuse&lt;/strong&gt;&lt;br&gt;If it’s easy to reuse, people will. Create an environment that supports reuse.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;There Are No Final Decisions&lt;/strong&gt;&lt;br&gt;No decision is cast in stone. Instead, consider each as being written in the sand at the beach, and plan for change.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prototype to Learn&lt;/strong&gt;&lt;br&gt;Prototyping is a learning experience. Its value lies not in the code you produce, but in the lessons you learn.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Estimate to Avoid Surprises&lt;/strong&gt;&lt;br&gt;Estimate before you start. You’ll spot potential problems up front.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keep Knowledge in Plain Text&lt;/strong&gt;&lt;br&gt;Plain text won’t become obsolete. It helps leverage your work and simplifies debugging and testing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use a Single Editor Well&lt;/strong&gt;&lt;br&gt;The editor should be an extension of your hand; make sure your editor is configurable, extensible, and programmable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fix the Problem, Not the Blame&lt;/strong&gt;&lt;br&gt;It doesn’t really matter whether the bug is your fault or someone else’s—it is still your problem, and it still needs to be fixed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;“select” Isn’t Broken&lt;/strong&gt;&lt;br&gt;It is rare to find a bug in the OS or the compiler, or even a third-party product or library. The bug is most likely in the application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Learn a Text Manipulation Language&lt;/strong&gt;&lt;br&gt;You spend a large part of each day working with text. Why not have the computer do some of it for you?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You Can’t Write Perfect Software&lt;/strong&gt;&lt;br&gt;Software can’t be perfect. Protect your code and users from the inevitable errors.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Crash Early&lt;/strong&gt;&lt;br&gt;A dead program normally does a lot less damage than a crippled one.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use Exceptions for Exceptional Problems&lt;/strong&gt;&lt;br&gt;Exceptions can suffer from all the readability and maintainability problems of classic spaghetti code. Reserve exceptions for exceptional things.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Minimize Coupling Between Modules&lt;/strong&gt;&lt;br&gt;Avoid coupling by writing “shy” code and applying the Law of Demeter.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Put Abstractions in Code, Details in Metadata&lt;/strong&gt;&lt;br&gt;Program for the general case, and put the specifics outside the compiled code base.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Design Using Services&lt;/strong&gt;&lt;br&gt;Design in terms of services—independent, concurrent objects behind well-defined, consistent interfaces.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Separate Views from Models&lt;/strong&gt;&lt;br&gt;Gain flexibility at low cost by designing your application in terms of models and views.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don’t Program by Coincidence&lt;/strong&gt;&lt;br&gt;Rely only on reliable things. Beware of accidental complexity, and don’t confuse a happy coincidence with a purposeful plan.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Test Your Estimates&lt;/strong&gt;&lt;br&gt;Mathematical analysis of algorithms doesn’t tell you everything. Try timing your code in its target environment.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Design to Test&lt;/strong&gt;&lt;br&gt;Start thinking about testing before you write a line of code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don’t Use Wizard Code You Don’t Understand&lt;/strong&gt;&lt;br&gt;Wizards can generate reams of code. Make sure you understand all of it before you incorporate it into your project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Work with a User to Think Like a User&lt;/strong&gt;&lt;br&gt;It’s the best way to gain insight into how the system will really be used.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use a Project Glossary&lt;/strong&gt;&lt;br&gt;Create and maintain a single source of all the specific terms and vocabulary for a project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Start When You’re Ready&lt;/strong&gt;&lt;br&gt;You’ve been building experience all your life. Don’t ignore niggling doubts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don’t Be a Slave to Formal Methods&lt;/strong&gt;&lt;br&gt;Don’t blindly adopt any technique without putting it into the context of your development practices and capabilities.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Organize Teams Around Functionality&lt;/strong&gt;&lt;br&gt;Don’t separate designers from coders, testers from data modelers. Build teams the way you build code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Test Early. Test Often. Test Automatically.&lt;/strong&gt;&lt;br&gt;Tests that run with every build are much more effective than test plans that sit on a shelf.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use Saboteurs to Test Your Testing&lt;/strong&gt;&lt;br&gt;Introduce bugs on purpose in a separate copy of the source to verify that testing will catch them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Find Bugs Once&lt;/strong&gt;&lt;br&gt;Once a human tester finds a bug, it should be the last time a human tester finds that bug. Automatic tests should check for it from then on.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Build Documentation In, Don’t Bolt It On&lt;/strong&gt;&lt;br&gt;Documentation created separately from code is less likely to be correct and up to date.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sign Your Work&lt;/strong&gt;&lt;br&gt;Craftsmen of an earlier age were proud to sign their work. You should be, too.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这本书的副标题是From Journeyman to Master，中文翻译过来是”从小工到专家”，工作了近十年，回过头来再看这本书，发现这本书虽然从出版到现在已经近20年了，正如作者在09年的再版序言里说的:”Things Really Haven’t Changed T
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>rtmp协议分析</title>
    <link href="http://jiantaofu.github.io/2016/05/06/rtmp%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90/"/>
    <id>http://jiantaofu.github.io/2016/05/06/rtmp协议分析/</id>
    <published>2016-05-07T05:34:27.000Z</published>
    <updated>2016-05-09T02:20:49.000Z</updated>
    
    <content type="html">&lt;p&gt;官方的文档在这&lt;a href=&quot;https://wwwimages2.adobe.com/content/dam/Adobe/en/devnet/rtmp/pdf/rtmp_specification_1.0.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Message Stream: 用于消息传输的逻辑通道，多个Stream可以复用同一个物理连接。&lt;/li&gt;
&lt;li&gt;Message Stream ID: 用于标识不同的流。&lt;/li&gt;
&lt;li&gt;Chunk: 消息传输需要将其拆分成小的片段，以便复用减少时延。&lt;/li&gt;
&lt;li&gt;Chunk Stream: 用于传输Chunk的逻辑通道，一个Chunk Stream可以复用多个Message Stream。一个物理连接上可以复用多个Chunk Stream。&lt;/li&gt;
&lt;li&gt;Chunk Stream ID: 标识Chunk流&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;RTMP-chunk-stream&quot;&gt;&lt;a href=&quot;#RTMP-chunk-stream&quot; class=&quot;headerlink&quot; title=&quot;RTMP chunk stream&quot;&gt;&lt;/a&gt;RTMP chunk stream&lt;/h2&gt;&lt;p&gt;这个是设计的基于TCP的传输协议, RTMP协议构建在这个之上。&lt;/p&gt;
&lt;h3 id=&quot;Handshake&quot;&gt;&lt;a href=&quot;#Handshake&quot; class=&quot;headerlink&quot; title=&quot;Handshake&quot;&gt;&lt;/a&gt;Handshake&lt;/h3&gt;&lt;p&gt;握手第一阶段是交换版本号看是否能支持，只有一个字节(C0, S0)，可以提高效率，在协议支持的情况下提前断开连接。后面的(C1, S1)和(C2, S2)类似ping的来回，里面带上了timestamp，而且包的大小非常大，用random数据填充，协议没有说明这样做的目的，但提到了可以初步估算RTT和带宽，同时也替代可能不准。&lt;/p&gt;
&lt;h3 id=&quot;Chunk&quot;&gt;&lt;a href=&quot;#Chunk&quot; class=&quot;headerlink&quot; title=&quot;Chunk&quot;&gt;&lt;/a&gt;Chunk&lt;/h3&gt;&lt;p&gt;Adobe在Chunk设计上还是有些考量的，花费了许多心思来避免传输重复的字段来做到Header compresssion，也导致协议的设计略微复杂。而且这种做法需要必须做到可靠传输，也就是rtmp需要用tcp的原因。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多路数据同一连接multiplexing，小的chunk size可以避免大的Video数据包对Audio数据包的影响。&lt;/li&gt;
&lt;li&gt;但是，小的chunk会带来更多的CPU开销，并影响传输效率。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chunk头的设计也是一个长度可变的，包括基本头，消息头，和扩展时间戳字段。&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;+--------------+&lt;/span&gt;----------------&lt;span class=&quot;code&quot;&gt;+--------------------+&lt;/span&gt;--------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;| Basic Header | Message Header | Extended Timestamp | Chunk Data   |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+--------------+----------------+--------------------+--------------+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                                                    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&amp;lt;------------------- Chunk Header -----------------&amp;gt;|&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Basic Header有两个信息，一个是StreamID，还有一个是ChunkType。Basic Header设计为可以变长的(1 Byte, 2 Byte, 3 Byte)，ChunkType是固定的2 bits，变化的是StreamID，将 0, 1预留出来，标识不同长度的StreamID（对应14 bits, 22 bits)， StreamID 2作为内部控制协议预留，Basice Header长度也是一个字节。&lt;/p&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt; 0 1 2 3 4 5 6 7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;|fmt| cs id     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Chunk basic header 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;|fmt| 0         | cs id - 64    |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Chunk basic header 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;|fmt| 1         |         cs id - 64            |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Chunk basic header 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;cs id(StreamID): used to say the type of the message. 2 (low level), 3 (high level), 4 (control stream), 5 (video) and 6 (audio).&lt;/p&gt;
&lt;p&gt;Message Header也是可变的，格式由basic header的fmt来标识:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fmt 0: Chunk Stream刚开始的时候，或者Timestamp回退的时间使用。&lt;/li&gt;
&lt;li&gt;fmt 1: 和fmt 0相比少了StreamID，因为之前的消息有携带过StreamID，这里就略掉了。&lt;/li&gt;
&lt;li&gt;fmt 2: 如果消息长度也都一样，那这个字段也可以省略掉了。&lt;/li&gt;
&lt;li&gt;fmt 3: 长度信息和时间间隔信息也都一样，就都不用传了。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;| timestamp                                     |message length |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;| message length (cont)       |message type id  | msg stream id |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;| message stream id (cont)                      |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Chunk Message Header - Type 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;| timestamp delta                               |message length |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;| message length (cont)         |message type id|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Chunk Message Header - Type 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;| timestamp delta                               |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Chunk Message Header - Type 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Extended Timestamp只是在3 bytes的timestamp(delta)字段不够用的时候才有的，这样就构成了4 bytes来表示时间戳。&lt;/p&gt;
&lt;h3 id=&quot;Message-Type&quot;&gt;&lt;a href=&quot;#Message-Type&quot; class=&quot;headerlink&quot; title=&quot;Message Type&quot;&gt;&lt;/a&gt;Message Type&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Set Chunk Size(message type id 1): 设置Chunk大小，默认为128 bytes。&lt;/li&gt;
&lt;li&gt;Abort Message(message type id 2): 链接终止前通知对方，对方可以丢弃未完整收到的chunk数据。&lt;/li&gt;
&lt;li&gt;Ack(message type id 3): 当收到window size（发送方可以最多发送的字节数，而不需要等收到Ack）大小的数据(自上次Ack或者从传输开始）后给对方的通知。&lt;/li&gt;
&lt;li&gt;Ack Window Size(message type id 5): 通知接受方当前发送方使用的window size的大小，用来调整Ack的频率。&lt;/li&gt;
&lt;li&gt;Set Peer Bandwidth(message type id 6): 通知发送方window size的大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为什么没有4？4预留给了RTMP的控制协议，后面可以看到RTMP协议里面还定义了其他的一些message Type，上面的这些message type是和传输相关的，而后面定义的那些则是和应用相关。&lt;/p&gt;
&lt;h3 id=&quot;参考源码&quot;&gt;&lt;a href=&quot;#参考源码&quot; class=&quot;headerlink&quot; title=&quot;参考源码&quot;&gt;&lt;/a&gt;参考源码&lt;/h3&gt;&lt;p&gt;librtmp包解析函数, &lt;a href=&quot;https://github.com/lu-zero/rtmpdump/blob/master/librtmp/rtmp.c#L2886&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;int RTMP_ReadPacket(RTMP &lt;em&gt;r, RTMPPacket &lt;/em&gt;packet)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;librtmp对不同message type的处理, &lt;a href=&quot;https://github.com/lu-zero/rtmpdump/blob/master/librtmp/rtmp.c#L1101&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;int RTMP_ClientPacket(RTMP &lt;em&gt;r, RTMPPacket &lt;/em&gt;packet)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;RTMP&quot;&gt;&lt;a href=&quot;#RTMP&quot; class=&quot;headerlink&quot; title=&quot;RTMP&quot;&gt;&lt;/a&gt;RTMP&lt;/h2&gt;&lt;p&gt;Adode的文档在概念上不太清晰，需要说明的是RTMP协议是在RTMP Chunk(传输协议)之上的一层应用协议。另外RTMP混杂了太多的功能，而且很多是和Adobe的服务器业务逻辑耦合的。&lt;/p&gt;
&lt;h3 id=&quot;公共消息头&quot;&gt;&lt;a href=&quot;#公共消息头&quot; class=&quot;headerlink&quot; title=&quot;公共消息头&quot;&gt;&lt;/a&gt;公共消息头&lt;/h3&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt; 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| Message Type |                  Payload length                |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;| (1 byte)     |                  (3 bytes)                     |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                        Timestamp                              |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;|                        (4 bytes)                              |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|                        Stream ID              |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;|                        (3 bytes)              |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Message Header&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;用户控制消息&quot;&gt;&lt;a href=&quot;#用户控制消息&quot; class=&quot;headerlink&quot; title=&quot;用户控制消息&quot;&gt;&lt;/a&gt;用户控制消息&lt;/h3&gt;&lt;p&gt;控制协议的Chunk Message使用如下的一些字段值:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Message Stream ID 0&lt;/li&gt;
&lt;li&gt;Chunk Stream ID 2&lt;/li&gt;
&lt;li&gt;Message Type Id 4&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;+------------------------------+&lt;/span&gt;-------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;header&quot;&gt;| Event Type (16 bits)         | Event Data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+------------------------------+-------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    Payload for the ‘User Control’ protocol message&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Event包括:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0: Stream Begin&lt;/li&gt;
&lt;li&gt;1: Stream EOF&lt;/li&gt;
&lt;li&gt;2: Stream Dry&lt;/li&gt;
&lt;li&gt;3: Set Buffer Length&lt;/li&gt;
&lt;li&gt;4: Stream Is Recored&lt;/li&gt;
&lt;li&gt;6: Ping Request&lt;/li&gt;
&lt;li&gt;7: Ping Response&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Command消息&quot;&gt;&lt;a href=&quot;#Command消息&quot; class=&quot;headerlink&quot; title=&quot;Command消息&quot;&gt;&lt;/a&gt;Command消息&lt;/h3&gt;&lt;p&gt;AMF编码的命令，包括connect, createStream, publish, play, pause, onstatus, result等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Message Type Id 20 (AMF0)&lt;/li&gt;
&lt;li&gt;Message Type Id 17 (AMF3)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Command消息包括:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NetConnection::connect&lt;/li&gt;
&lt;li&gt;NetConnection::call&lt;/li&gt;
&lt;li&gt;NetConnection::CreateStream&lt;/li&gt;
&lt;li&gt;NetStream::play&lt;/li&gt;
&lt;li&gt;NetStream::play2&lt;/li&gt;
&lt;li&gt;NetStream::deleteStream&lt;/li&gt;
&lt;li&gt;NetStream::closeStream&lt;/li&gt;
&lt;li&gt;NetStream::receiveAudio&lt;/li&gt;
&lt;li&gt;NetStream::receiveVideo&lt;/li&gt;
&lt;li&gt;NetStream::publish&lt;/li&gt;
&lt;li&gt;NetStream::seek&lt;/li&gt;
&lt;li&gt;NetStream::pause&lt;/li&gt;
&lt;li&gt;NetStream::onStatus&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Data消息&quot;&gt;&lt;a href=&quot;#Data消息&quot; class=&quot;headerlink&quot; title=&quot;Data消息&quot;&gt;&lt;/a&gt;Data消息&lt;/h3&gt;&lt;p&gt;数据的元信息，如创建时间，持续时间等。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Message Type Id 18 (AMF0)&lt;/li&gt;
&lt;li&gt;Message Type Id 15 (AMF3)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Shared-Object消息&quot;&gt;&lt;a href=&quot;#Shared-Object消息&quot; class=&quot;headerlink&quot; title=&quot;Shared Object消息&quot;&gt;&lt;/a&gt;Shared Object消息&lt;/h3&gt;&lt;p&gt;用于Flash对象的同步（远程调用操作）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Message Type Id 19 (AMF0)&lt;/li&gt;
&lt;li&gt;Message Type Id 16 (AMF3)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Audio消息&quot;&gt;&lt;a href=&quot;#Audio消息&quot; class=&quot;headerlink&quot; title=&quot;Audio消息&quot;&gt;&lt;/a&gt;Audio消息&lt;/h3&gt;&lt;p&gt;传输audio数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Message Type Id 8&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Video消息&quot;&gt;&lt;a href=&quot;#Video消息&quot; class=&quot;headerlink&quot; title=&quot;Video消息&quot;&gt;&lt;/a&gt;Video消息&lt;/h3&gt;&lt;p&gt;传输video数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Message Type Id 9&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Aggregate消息&quot;&gt;&lt;a href=&quot;#Aggregate消息&quot; class=&quot;headerlink&quot; title=&quot;Aggregate消息&quot;&gt;&lt;/a&gt;Aggregate消息&lt;/h3&gt;&lt;p&gt;聚合其他的消息。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.kundansingh.com/2009/06/problems-in-rtmp.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Problems in RTMP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Action_Message_Format&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AMF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;官方的文档在这&lt;a href=&quot;https://wwwimages2.adobe.com/content/dam/Adobe/en/devnet/rtmp/pdf/rtmp_specification_1.0.pdf&quot; target=&quot;_blank&quot; rel=&quot;extern
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>obs源码分析</title>
    <link href="http://jiantaofu.github.io/2015/08/13/obs%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://jiantaofu.github.io/2015/08/13/obs源码分析/</id>
    <published>2015-08-14T04:32:20.000Z</published>
    <updated>2016-05-09T02:23:37.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;obs源码分析&quot;&gt;&lt;a href=&quot;#obs源码分析&quot; class=&quot;headerlink&quot; title=&quot;obs源码分析&quot;&gt;&lt;/a&gt;obs源码分析&lt;/h1&gt;&lt;h2 id=&quot;编译源码&quot;&gt;&lt;a href=&quot;#编译源码&quot; class=&quot;headerlink&quot; title=&quot;编译源码&quot;&gt;&lt;/a&gt;编译源码&lt;/h2&gt;&lt;p&gt;分析源码的第一步是编译源码，这样才能边调试边学习。obs studio支持cmake，在mac osx下可以生成Xcode的工程文件，这样方便调试。obs依赖的库有ffmpeg, qt5等，用brew可以很方便的安装。&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;brew &lt;/span&gt;install qt5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;需要注意的是用cmake生成工程文件前需要设置环境变量:&lt;/p&gt;
&lt;figure class=&quot;highlight autoit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export CMAKE_PREFIX_PATH=/usr/&lt;span class=&quot;keyword&quot;&gt;local&lt;/span&gt;/&lt;span class=&quot;built_in&quot;&gt;opt&lt;/span&gt;/qt5/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成好了工程文件后，设置一下工作目录，否则会找不到locale文件报错。&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$(SRCROOT)&lt;span class=&quot;regexp&quot;&gt;/macbuild/&lt;/span&gt;rundir&lt;span class=&quot;regexp&quot;&gt;/Debug/&lt;/span&gt;bin&lt;span class=&quot;regexp&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;线程分析&quot;&gt;&lt;a href=&quot;#线程分析&quot; class=&quot;headerlink&quot; title=&quot;线程分析&quot;&gt;&lt;/a&gt;线程分析&lt;/h2&gt;&lt;p&gt;接下来可以把程序跑起来了，可以调试运行，让程序暂停，然后分析一下程序有哪些主要的线程。&lt;/p&gt;
&lt;p&gt;程序起来开始streaming前可以看到有三个线程:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“audio-io: audio thread”: 音频采集&lt;/li&gt;
&lt;li&gt;“video-io: video thread”: 视频采集&lt;/li&gt;
&lt;li&gt;“libobs: graphics thread”: 视频预览&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;基本数据结构分析&quot;&gt;&lt;a href=&quot;#基本数据结构分析&quot; class=&quot;headerlink&quot; title=&quot;基本数据结构分析&quot;&gt;&lt;/a&gt;基本数据结构分析&lt;/h2&gt;&lt;h3 id=&quot;视频部分&quot;&gt;&lt;a href=&quot;#视频部分&quot; class=&quot;headerlink&quot; title=&quot;视频部分&quot;&gt;&lt;/a&gt;视频部分&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; video_data &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt;           *data[MAX_AV_PLANES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;          linesize[MAX_AV_PLANES];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint64_t&lt;/span&gt;          timestamp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; video_input &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; video_scale_info   conversion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;video_scaler_t&lt;/span&gt;            *scaler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; video_frame        frame[MAX_CONVERT_BUFFERS];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;                       cur_frame;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (*callback)(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *param, &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; video_data *frame);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *param;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; video_output &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; video_output_info   info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;pthread_t&lt;/span&gt;                  thread;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;pthread_mutex_t&lt;/span&gt;            data_mutex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                       stop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;os_sem_t&lt;/span&gt;                   *update_semaphore;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint64_t&lt;/span&gt;                   frame_time;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;                   skipped_frames;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;                   total_frames;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                       initialized;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;pthread_mutex_t&lt;/span&gt;            input_mutex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        DARRAY(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; video_input) inputs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt;                     available_frames;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt;                     first_added;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt;                     last_added;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; cached_frame_info   cache[MAX_CACHE_SIZE];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; video_output &lt;span class=&quot;keyword&quot;&gt;video_t&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_context_data         context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source_info          info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_weak_source          *control;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* general exposed flags that can be set for the source */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;                        flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;                        default_flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* indicates ownership of the info.id buffer */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            owns_info_id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* signals to call the source update in the video thread */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            defer_update;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* ensures show/hide are only called once */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;                   show_refs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* ensures activate/deactivate are only called once */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;                   activate_refs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* used to indicate that the source has been removed and all&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * references to it should be released (not exactly how I would prefer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * to handle things but it&#39;s the best option) */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            removed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            active;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            showing;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* used to temporarily disable sources if needed */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            enabled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* timing (if video is present, is based upon video) */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                   timing_set;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint64_t&lt;/span&gt;               timing_adjust;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint64_t&lt;/span&gt;                        next_audio_ts_min;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint64_t&lt;/span&gt;                        last_frame_ts;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint64_t&lt;/span&gt;                        last_sys_timestamp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            async_rendered;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            audio_failed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            muted;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; resample_info            sample_info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;audio_resampler_t&lt;/span&gt;               *resampler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;audio_line_t&lt;/span&gt;                    *audio_line;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;pthread_mutex_t&lt;/span&gt;                 audio_mutex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_audio_data           audio_data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt;                          audio_storage_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;                           base_volume;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;                           user_volume;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;                           present_volume;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt;                         sync_offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* async video data */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;gs_texture_t&lt;/span&gt;                    *async_texture;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;gs_texrender_t&lt;/span&gt;                  *async_convert_texrender;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source_frame         *cur_async_frame;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            async_gpu_conversion;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; video_format               async_format;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; video_format               async_cache_format;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; gs_color_format            async_texture_format;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;                           async_color_matrix[&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            async_full_range;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;                           async_color_range_min[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;                           async_color_range_max[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;                             async_plane_offset[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            async_flip;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            async_active;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	DARRAY(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; async_frame)      async_cache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	DARRAY(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source_frame*)async_frames;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;pthread_mutex_t&lt;/span&gt;                 async_mutex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;                        async_width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;                        async_height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;                        async_cache_width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;                        async_cache_height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;                        async_convert_width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;                        async_convert_height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* filters */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source               *filter_parent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source               *filter_target;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	DARRAY(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source*)      filters;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;pthread_mutex_t&lt;/span&gt;                 filter_mutex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;gs_texrender_t&lt;/span&gt;                  *filter_texrender;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; obs_allow_direct_render    allow_direct;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            rendering_filter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* sources specific hotkeys */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	obs_hotkey_pair_id              mute_unmute_key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	obs_hotkey_id                   push_to_mute_key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	obs_hotkey_id                   push_to_talk_key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            push_to_mute_enabled : &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            push_to_mute_pressed : &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            push_to_talk_enabled : &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt;                            push_to_talk_pressed : &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint64_t&lt;/span&gt;                        push_to_mute_delay;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint64_t&lt;/span&gt;                        push_to_mute_stop_time;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint64_t&lt;/span&gt;                        push_to_talk_delay;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint64_t&lt;/span&gt;                        push_to_talk_stop_time;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;EXPORT &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;video_output_connect&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;video_t *video,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; video_scale_info *conversion,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (*callback&lt;/span&gt;)(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *param, &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; video_data *frame&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *param)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在obs-encoder.c中:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void obs_encoder_start(obs_encoder_t *encoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		void (*new_packet)(void *param, struct encoder_packet *packet),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		void *param)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	struct encoder_callback cb = &amp;#123;false, new_packet, param&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bool first   = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (!encoder || !new_packet || !encoder-&amp;gt;context.data) return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pthread_mutex_lock(&amp;amp;encoder-&amp;gt;callbacks_mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	first = (encoder-&amp;gt;callbacks.num == 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	size_t idx = get_callback_idx(encoder, new_packet, param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (idx == DARRAY_INVALID)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		da_push_back(encoder-&amp;gt;callbacks, &amp;amp;cb);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pthread_mutex_unlock(&amp;amp;encoder-&amp;gt;callbacks_mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if (first) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		encoder-&amp;gt;cur_pts = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		add_connection(encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;static void add_connection(struct obs_encoder *encoder)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (encoder-&amp;gt;info.type == OBS_ENCODER_AUDIO) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                struct audio_convert_info audio_info = &amp;#123;0&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                get_audio_info(encoder, &amp;amp;audio_info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                audio_output_connect(encoder-&amp;gt;media, encoder-&amp;gt;mixer_idx,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &amp;amp;audio_info, receive_audio, encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                struct video_scale_info info = &amp;#123;0&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                get_video_info(encoder, &amp;amp;info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                video_output_connect(encoder-&amp;gt;media, &amp;amp;info, receive_video,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        encoder-&amp;gt;active = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;基本流程&quot;&gt;&lt;a href=&quot;#基本流程&quot; class=&quot;headerlink&quot; title=&quot;基本流程&quot;&gt;&lt;/a&gt;基本流程&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;obs_output_begin_data_capture&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(obs_output_t *output, uint32_t flags)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoded, has_video, has_audio, has_service;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!output) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (output-&amp;gt;active) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output-&amp;gt;total_frames   = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	convert_flags(output, flags, &amp;amp;encoded, &amp;amp;has_video, &amp;amp;has_audio,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;amp;has_service);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!can_begin_data_capture(output, encoded, has_video, has_audio,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				has_service))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	hook_data_capture(output, encoded, has_video, has_audio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (has_service)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		obs_service_activate(output-&amp;gt;service);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	output-&amp;gt;active = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (output-&amp;gt;reconnecting) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		signal_reconnect_success(output);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		output-&amp;gt;reconnecting = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		signal_start(output);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hook_data_capture&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_output *output, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoded,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; has_video, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; has_audio)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;encoded_callback_t&lt;/span&gt; encoded_callback;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoded) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		output-&amp;gt;received_audio   = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		output-&amp;gt;received_video   = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		output-&amp;gt;highest_audio_ts = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		output-&amp;gt;highest_video_ts = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		output-&amp;gt;video_offset     = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; MAX_AUDIO_MIXES; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			output-&amp;gt;audio_offsets[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		free_packets(output);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		encoded_callback = (has_video &amp;amp;&amp;amp; has_audio) ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			interleave_packets : default_encoded_callback;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (has_video)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			obs_encoder_start(output-&amp;gt;video_encoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					encoded_callback, output);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (has_audio)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			start_audio_encoders(output, encoded_callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (has_video)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			video_output_connect(output-&amp;gt;video,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					get_video_conversion(output),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					default_raw_video_callback, output);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (has_audio)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			audio_output_connect(output-&amp;gt;audio, output-&amp;gt;mixer_idx,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					get_audio_conversion(output),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;					default_raw_audio_callback, output);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;do_encode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_encoder *encoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; encoder_frame *frame)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; encoder_packet pkt = &amp;#123;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; received = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; success;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pkt.timebase_num = encoder-&amp;gt;timebase_num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pkt.timebase_den = encoder-&amp;gt;timebase_den;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pkt.encoder = encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	success = encoder-&amp;gt;info.encode(encoder-&amp;gt;context.data, frame, &amp;amp;pkt,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;amp;received);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!success) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		full_stop(encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		blog(LOG_ERROR, &lt;span class=&quot;string&quot;&gt;&quot;Error encoding with encoder &#39;%s&#39;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				encoder-&amp;gt;context.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (received) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;/* we use system time here to ensure sync with other encoders,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		 * you do not want to use relative timestamps here */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pkt.dts_usec = encoder-&amp;gt;start_ts / &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; + packet_dts_usec(&amp;amp;pkt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pthread_mutex_lock(&amp;amp;encoder-&amp;gt;callbacks_mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; encoder-&amp;gt;callbacks.num; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; encoder_callback *cb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			cb = encoder-&amp;gt;callbacks.&lt;span class=&quot;built_in&quot;&gt;array&lt;/span&gt;+i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			send_packet(encoder, cb, &amp;amp;pkt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pthread_mutex_unlock(&amp;amp;encoder-&amp;gt;callbacks_mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最重要的全局变量:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct obs_core *obs = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/* internal initialization */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bool obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_init(struct obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; *&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		const struct obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_info *info)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pthread_mutexattr_t attr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;user_volume = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;present_volume = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;base_volume = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;sync_offset = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pthread_mutex_init_value(&amp;amp;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;filter_mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pthread_mutex_init_value(&amp;amp;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;async_mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pthread_mutex_init_value(&amp;amp;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;audio_mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pthread_mutexattr_init(&amp;amp;attr) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pthread_mutexattr_settype(&amp;amp;attr, PTHREAD_MUTEX_RECURSIVE) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pthread_mutex_init(&amp;amp;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;filter_mutex, &amp;amp;attr) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pthread_mutex_init(&amp;amp;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;audio_mutex, NULL) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pthread_mutex_init(&amp;amp;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;async_mutex, NULL) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (info &amp;amp;&amp;amp; info-&amp;gt;output_flags &amp;amp; OBS_SOURCE_AUDIO) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;audio_line = audio_output_create_line(obs-&amp;gt;audio.audio,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;context.name, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;xF);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;audio_line) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			blog(LOG_ERROR, &lt;span class=&quot;string&quot;&gt;&quot;Failed to create audio line for &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			                &lt;span class=&quot;string&quot;&gt;&quot;source &#39;%s&#39;&quot;&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;context.name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;control = bzalloc(sizeof(obs_weak_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_t));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;control-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	obs_context_data_insert(&amp;amp;&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;context,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;amp;obs-&amp;gt;data.sources_mutex,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;amp;obs-&amp;gt;data.first_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_t *obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_create(enum obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;, const char *id,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		const char *name, obs_data_t *settings, obs_data_t *hotkey_data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	struct obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; *&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; = bzalloc(sizeof(struct obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	const struct obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_info *info = get_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_info(&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;, id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!info) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		blog(LOG_ERROR, &lt;span class=&quot;string&quot;&gt;&quot;Source ID &#39;%s&#39; not found&quot;&lt;/span&gt;, id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;info.id      = bstrdup(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;info.type    = &lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;owns_info_id = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;info = *info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;mute_unmute_key  = OBS_INVALID_HOTKEY_PAIR_ID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;push_to_mute_key = OBS_INVALID_HOTKEY_ID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;push_to_talk_key = OBS_INVALID_HOTKEY_ID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_init_context(&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;, settings, name, hotkey_data))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		goto fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (info &amp;amp;&amp;amp; info-&amp;gt;get_defaults)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		info-&amp;gt;get_defaults(&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;context.settings);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_init(&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;, info))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		goto fail;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_init_audio_hotkeys(&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	/* allow the &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt; to be created even &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; creation fails so that the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 * user&lt;span class=&quot;string&quot;&gt;&#39;s data doesn&#39;&lt;/span&gt;t become lost */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (info)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;context.data = info-&amp;gt;create(&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;context.settings,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;context.data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		blog(LOG_ERROR, &lt;span class=&quot;string&quot;&gt;&quot;Failed to create source &#39;%s&#39;!&quot;&lt;/span&gt;, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	blog(LOG_INFO, &lt;span class=&quot;string&quot;&gt;&quot;source &#39;%s&#39; (%s) created&quot;&lt;/span&gt;, name, id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_dosignal(&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;source_create&quot;&lt;/span&gt;, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;flags = &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;default_flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;-&amp;gt;enabled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (info &amp;amp;&amp;amp; info-&amp;gt;&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; == OBS_SOURCE_TYPE_TRANSITION)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		os_atomic_inc_long(&amp;amp;obs-&amp;gt;data.active_transitions);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fail:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	blog(LOG_ERROR, &lt;span class=&quot;string&quot;&gt;&quot;obs_source_create failed&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	obs_&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;_destroy(&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; uint64_t &lt;span class=&quot;title&quot;&gt;tick_sources&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(uint64_t cur_time, uint64_t last_time)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_core_data *data = &amp;amp;obs-&amp;gt;data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_view      *view = &amp;amp;data-&amp;gt;main_view;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source    *source;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;uint64_t&lt;/span&gt;             delta_time;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;                seconds;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!last_time)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		last_time = cur_time -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			video_output_get_frame_time(obs-&amp;gt;video.video);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	delta_time = cur_time - last_time;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	seconds = (&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;)((&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)delta_time / &lt;span class=&quot;number&quot;&gt;1000000000.0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pthread_mutex_lock(&amp;amp;data-&amp;gt;sources_mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* call the tick function of each source */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	source = data-&amp;gt;first_source;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (source) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		obs_source_video_tick(source, seconds);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		source = (&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source*)source-&amp;gt;context.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/* calculate source volumes */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pthread_mutex_lock(&amp;amp;view-&amp;gt;channels_mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	source = data-&amp;gt;first_source;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (source) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		calculate_base_volume(data, view, source);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		source = (&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source*)source-&amp;gt;context.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pthread_mutex_unlock(&amp;amp;view-&amp;gt;channels_mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pthread_mutex_unlock(&amp;amp;data-&amp;gt;sources_mutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cur_time;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Video数据流&quot;&gt;&lt;a href=&quot;#Video数据流&quot; class=&quot;headerlink&quot; title=&quot;Video数据流&quot;&gt;&lt;/a&gt;Video数据流&lt;/h3&gt;&lt;p&gt;rtmp_stream_start -&amp;gt; connect_thread -&amp;gt; try_connect -&amp;gt; init_send -&amp;gt; obs_output_begin_data_capture -&amp;gt; hook_data_capture -&amp;gt; obs_encoder_start(interleave_packets) -&amp;gt; add_connection -&amp;gt; video_output_connect(receive_video)&lt;/p&gt;
&lt;p&gt;obs_source_create -&amp;gt; av_capture_info.create[av_capture_create]&lt;/p&gt;
&lt;p&gt;captureOutput didOutputSampleBuffer fromConnection -&amp;gt; obs_source_output_video -&amp;gt; cache_video&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;obs_init_video -&amp;gt; pthread_create(obs_video_thread) -&amp;gt; tick_sources -&amp;gt; obs_source_video_tick -&amp;gt; get_closest_frame&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                   -&amp;gt; render_displays&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                   -&amp;gt; output_frame -&amp;gt; output_video_data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;video_thread -&amp;gt; video_output_cur_frame -&amp;gt; input-&amp;gt;callback -&amp;gt; receive_video -&amp;gt; do_encode -&amp;gt; encoder-&amp;gt;info.encode -&amp;gt; send_packet -&amp;gt; interleave_packets&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obs_init_video -&amp;gt; video_output_open -&amp;gt; pthread_create(video_thread)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;obs源码分析&quot;&gt;&lt;a href=&quot;#obs源码分析&quot; class=&quot;headerlink&quot; title=&quot;obs源码分析&quot;&gt;&lt;/a&gt;obs源码分析&lt;/h1&gt;&lt;h2 id=&quot;编译源码&quot;&gt;&lt;a href=&quot;#编译源码&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>obs视频采集源码分析</title>
    <link href="http://jiantaofu.github.io/2015/07/12/obs%E8%A7%86%E9%A2%91%E9%87%87%E9%9B%86%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://jiantaofu.github.io/2015/07/12/obs视频采集源码分析/</id>
    <published>2015-07-12T19:00:06.000Z</published>
    <updated>2016-05-09T02:23:04.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;obs视频采集源码分析&quot;&gt;&lt;a href=&quot;#obs视频采集源码分析&quot; class=&quot;headerlink&quot; title=&quot;obs视频采集源码分析&quot;&gt;&lt;/a&gt;obs视频采集源码分析&lt;/h1&gt;&lt;p&gt;obs采用的plugin的方式来进行视频采集，下面以OSX下的视频采集插件为示例。&lt;/p&gt;
&lt;p&gt;相关的文件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;plugins/av-capture.m&lt;/li&gt;
&lt;li&gt;plugins/AVCaptureInputPort+PreMavericksCompat.h&lt;/li&gt;
&lt;li&gt;libobs/obs.c&lt;/li&gt;
&lt;li&gt;libobs/media-io/video-io.c&lt;/li&gt;
&lt;li&gt;libobs/media-io/video-frame.c &lt;/li&gt;
&lt;li&gt;libobs/obs-output.c&lt;/li&gt;
&lt;li&gt;obs/window-basic-main.cpp&lt;/li&gt;
&lt;li&gt;obs/window-basic-main-outputs.cpp&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里定义了插件接口的实现:&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source_info av_capture_info = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.id             = &lt;span class=&quot;string&quot;&gt;&quot;av_capture_input&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.type           = OBS_SOURCE_TYPE_INPUT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.output_flags   = OBS_SOURCE_ASYNC_VIDEO,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.get_name       = av_capture_getname,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.create         = av_capture_create,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.destroy        = av_capture_destroy,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.get_defaults   = av_capture_defaults,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.get_properties = av_capture_properties,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.update         = av_capture_update,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;av_capture_create的流程基本上演示了AVFoundation的VideoCapture的基本api调用: &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;av_capture_create -&amp;gt; av_capture_init -&amp;gt; init_session -&amp;gt; dispatch_queue_create
                                                     -&amp;gt; addOutput
                                                     -&amp;gt; setSampleBufferDelegate
                                     -&amp;gt; AVCaptureDeviceWasDisconnectedNotification
                                     -&amp;gt; AVCaptureDeviceWasConnectedNotification
                                     -&amp;gt; deviceWithUniqueID
                                     -&amp;gt; capture_device -&amp;gt; init_device_input(add AVCaptureDeviceInput)
                                                       -&amp;gt; init_format(kCVPixelBufferPixelFormatTypeKey)
                                                       -&amp;gt; startRunning
                  -&amp;gt; av_capture_enable_buffering(set/unset OBS_SOURCE_FLAG_UNBUFFERED)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中包括了创建AVCaptureSession用来协调输入输出，创建AVCaptureVideoDataOutput来获取输出， OBSAVCaptureDelegate来处理每一帧的数据，创建AVCaptureDeviceInput用来从AVCaptureDevice中采集符合Preset设置的格式的数据。&lt;/p&gt;
&lt;p&gt;下面实现了采集Frame的回调函数，其中调用了update_frame将输出转化为obs内部的frame数据结构，然后调用obs_source_output_video将数据存储在cache中(cache_video)：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)captureOutput:(AVCaptureOutput *)captureOutput&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        didOutputSampleBuffer:(CMSampleBufferRef)sampleBuffer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fromConnection:(AVCaptureConnection *)connection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	UNUSED_PARAMETER(captureOutput);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	UNUSED_PARAMETER(connection);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CMItemCount count = CMSampleBufferGetNumSamples(sampleBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (count &amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; || !capture)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; obs_source_frame *frame = &amp;amp;capture-&amp;gt;frame;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CMTime target_pts =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		CMSampleBufferGetOutputPresentationTimeStamp(sampleBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CMTime target_pts_nano = CMTimeConvertScale(target_pts, NANO_TIMESCALE,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			kCMTimeRoundingMethod_Default);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	frame-&amp;gt;timestamp = target_pts_nano.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!update_frame(capture, frame, sampleBuffer))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	obs_source_output_video(capture-&amp;gt;source, frame);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CVImageBufferRef img = CMSampleBufferGetImageBuffer(sampleBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	CVPixelBufferUnlockBaseAddress(img, kCVPixelBufferLock_ReadOnly);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当通过UI操作添加视频源(OBSBasicSourceSelect::on_buttonBox_accepted)时，会调用obs_source_create，obs_source_create会调用av_capture_info.create。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (info)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        source-&amp;gt;context.data = info-&amp;gt;create(source-&amp;gt;context.settings,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        source);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;回过头在看一下Video相关的一些初始化参数:&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; OBSBasic::InitBasicConfigDefaults()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_uint  (basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;BaseCX&quot;&lt;/span&gt;,   cx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_uint  (basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;BaseCY&quot;&lt;/span&gt;,   cy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cx = cx * &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cy = cy * &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_uint  (basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;OutputCX&quot;&lt;/span&gt;, cx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_uint  (basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;OutputCY&quot;&lt;/span&gt;, cy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_uint  (basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;FPSType&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_string(basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;FPSCommon&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;30&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_uint  (basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;FPSInt&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_uint  (basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;FPSNum&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_uint  (basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;FPSDen&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_string(basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;ScaleType&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;bicubic&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_string(basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;ColorFormat&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;NV12&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_string(basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;ColorSpace&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;709&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        config_set_default_string(basicConfig, &lt;span class=&quot;string&quot;&gt;&quot;Video&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;ColorRange&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;Partial&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Video初始化过程:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;OBSBasic::OBSInit() -&amp;gt; OBSBasic::ResetVideo() -&amp;gt; AttemptToResetVideo -&amp;gt; obs_reset_video -&amp;gt; obs_init_video
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里obs_init_video创建了两个线程，video_thread用于输出(streaming/recording)，obs_video_thread用于预览。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;obs_init_video -&amp;gt; video_output_open -&amp;gt; video_thread -&amp;gt; video_output_cur_frame -&amp;gt; callback
               -&amp;gt; obs_video_thread -&amp;gt; output_frame -&amp;gt; render_video
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下面是rtmp streaming的初始化，在这里会创建一个obs_video_thread线程，并开始video encoder，并设置采集到video frame后的callback为receive_video，在receive_video里面会做视频编码。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;StartStreaming -&amp;gt; obs_output_start -&amp;gt; rtmp_stream_start(connect_thread)
connect_thread -&amp;gt; init_send -&amp;gt; obs_output_begin_data_capture -&amp;gt; hook_data_capture -&amp;gt; obs_encoder_start -&amp;gt; add_connection -&amp;gt; video_output_connect(receive_video)
receive_video -&amp;gt; do_encode
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接下来再看看视频采集出来的format，前面的初始化的配置里面ColorFormat设置为NV12，不同的Format在内存中分配的数据结构不一样，从video_frame_init里面可以看到，现在支持的Format包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VIDEO_FORMAT_I420&lt;/li&gt;
&lt;li&gt;VIDEO_FORMAT_NV12&lt;/li&gt;
&lt;li&gt;VIDEO_FORMAT_YVYU&lt;/li&gt;
&lt;li&gt;VIDEO_FORMAT_YUY2&lt;/li&gt;
&lt;li&gt;VIDEO_FORMAT_UYVY&lt;/li&gt;
&lt;li&gt;VIDEO_FORMAT_RGBA&lt;/li&gt;
&lt;li&gt;VIDEO_FORMAT_BGRA&lt;/li&gt;
&lt;li&gt;VIDEO_FORMAT_BGRX&lt;/li&gt;
&lt;li&gt;VIDEO_FORMAT_I444&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中VIDEO_FORMAT_YVYU，VIDEO_FORMAT_YUY2，VIDEO_FORMAT_UYVY的数据结构一样；VIDEO_FORMAT_RGBA，VIDEO_FORMAT_BGRA，VIDEO_FORMAT_BGRX的数据结构一样。NV12的数据帧内存结构如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://p.blog.csdn.net/images/p_blog_csdn_net/hhygcy/EntryImages/20081125/nv12.png&quot; alt=&quot;Single Frame YUV420: NV12&quot;&gt;&lt;/p&gt;
&lt;p&gt;更多格式可以参考&lt;a href=&quot;http://www.cnblogs.com/azraelly/archive/2013/01/01/2841269.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对应video_frame_init中NV12的代码如下:&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; VIDEO_FORMAT_NV12:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size = width * height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALIGN_SIZE(size, alignment);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        offsets[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size += (width/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) * (height/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALIGN_SIZE(size, alignment);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frame-&amp;gt;data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = bmalloc(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frame-&amp;gt;data[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = (&lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt;*)frame-&amp;gt;data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + offsets[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frame-&amp;gt;linesize[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frame-&amp;gt;linesize[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先存储Y需要width &lt;em&gt; height字节，因为每4个Y分别对应一个U和V，所以再加上width/2 &lt;/em&gt; height/2 * 2。这里的data[0]指向的就是frame开始的存储地址，data[1]是UV分量的起始地址。NV12是一种two-plane模式，即Y和UV分为两个Plane，但是UV（CbCr）为交错存储。linesize[0]是Y Plane跳到下一个行的字节数，linesize[1]是UV Plane跳到下一个行的字节数。更多请参考&lt;a href=&quot;http://stackoverflow.com/questions/13286022/can-anyone-help-in-understanding-avframe-linesize&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在mac下面，摄像头采集出来的ColorFormat是UYVY，每两个相邻的Y分别对应一个U和V。YUY2和YVYU的内存大小一样，唯一的区别是YUV分量的顺序有些区别。下面是UYVY的结构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img1.51cto.com/attachment/201104/202455202.png&quot; alt=&quot;UYVY&quot;&gt;&lt;/p&gt;
&lt;p&gt;对应video_frame_init中UYVY的代码如下:&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; VIDEO_FORMAT_YVYU:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; VIDEO_FORMAT_YUY2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; VIDEO_FORMAT_UYVY:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size = width * height * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALIGN_SIZE(size, alignment);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frame-&amp;gt;data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = bmalloc(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frame-&amp;gt;linesize[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = width*&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从上面的内存结构可以看出存储需要的字节数时width &lt;em&gt; height &lt;/em&gt; 2，data[0]指向的就是frame开始的存储地址，linesize[0]是Plane跳到下一个行的字节数，从上图可以看出这个是width个字节。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;obs视频采集源码分析&quot;&gt;&lt;a href=&quot;#obs视频采集源码分析&quot; class=&quot;headerlink&quot; title=&quot;obs视频采集源码分析&quot;&gt;&lt;/a&gt;obs视频采集源码分析&lt;/h1&gt;&lt;p&gt;obs采用的plugin的方式来进行视频采集，下面以OSX下的视频采
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>DASH标准</title>
    <link href="http://jiantaofu.github.io/2015/06/06/DASH%E6%A0%87%E5%87%86/"/>
    <id>http://jiantaofu.github.io/2015/06/06/DASH标准/</id>
    <published>2015-06-06T18:28:31.000Z</published>
    <updated>2016-05-09T02:21:11.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;DASH标准&quot;&gt;&lt;a href=&quot;#DASH标准&quot; class=&quot;headerlink&quot; title=&quot;DASH标准&quot;&gt;&lt;/a&gt;DASH标准&lt;/h1&gt;&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Multiple Audio Channels&lt;/em&gt;&lt;/strong&gt;: 支持有多个语言的音频切换&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Closed Captions/Subtitles&lt;/em&gt;&lt;/strong&gt;: 使用&lt;a href=&quot;http://dev.w3.org/html5/webvtt/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;webvtt&lt;/a&gt;来描述字幕。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Efficient AD Insertion&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Fast Channel Switching&lt;/em&gt;&lt;/strong&gt;: DASH的chunk为2-4秒，小的chunk可以方便做到不同频道间的快速切换，减少响应时间，而且有利于码率自适应的调整。但这个是以牺牲Video编码的效率(大的chunk可以有更高的压缩比)和网络协议的开销为代价的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Support Multiple CDNs In Parallel&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DASH可以通过BaseURLs来告诉客户端可用的CDN，客户端可以自行选择。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;HTML5支持&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;支持HTML5的&lt;a href=&quot;http://w3c.github.io/media-source/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Media Source Extensions&lt;/a&gt;的浏览器可以直接播放。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;HbbTV支持&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Agnostic to Audio/Video Codecs&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;支持不同的Audio/Video编码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;ISO Base Media File Format Segments&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;MPEG-2 TS Segments&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;WebM Segments&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;HEVC and 4K&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Multiplexed Audio/Video Content&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Quality of Metrics&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Client Logging &amp;amp; Reporting&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Client Failover&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Remove and add Quality Levels during Streaming&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Multiple Video Views&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Efficient Trick Modes&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;[MPEG-DASH vs. Apple HLS vs. Microsoft Smooth Streaming vs. Adobe HDS]&lt;a href=&quot;http://www.bitcodin.com/blog/2015/03/mpeg-dash-vs-apple-hls-vs-microsoft-smooth-streaming-vs-adobe-hds/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.bitcodin.com/blog/2015/03/mpeg-dash-vs-apple-hls-vs-microsoft-smooth-streaming-vs-adobe-hds/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[What is MPEG DASH?]&lt;a href=&quot;http://www.streamingmedia.com/Articles/Editorial/What-Is-.../What-is-MPEG-DASH-79041.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.streamingmedia.com/Articles/Editorial/What-Is-.../What-is-MPEG-DASH-79041.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[DASH Industry Forum]&lt;a href=&quot;http://dashif.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dashif.org/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;DASH标准&quot;&gt;&lt;a href=&quot;#DASH标准&quot; class=&quot;headerlink&quot; title=&quot;DASH标准&quot;&gt;&lt;/a&gt;DASH标准&lt;/h1&gt;&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Live Streaming技术综述</title>
    <link href="http://jiantaofu.github.io/2015/06/05/Live-Streaming%E6%8A%80%E6%9C%AF%E7%BB%BC%E8%BF%B0/"/>
    <id>http://jiantaofu.github.io/2015/06/05/Live-Streaming技术综述/</id>
    <published>2015-06-06T00:24:52.000Z</published>
    <updated>2016-05-09T02:22:00.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Live-Streaming技术综述&quot;&gt;&lt;a href=&quot;#Live-Streaming技术综述&quot; class=&quot;headerlink&quot; title=&quot;Live Streaming技术综述&quot;&gt;&lt;/a&gt;Live Streaming技术综述&lt;/h1&gt;&lt;h2 id=&quot;架构图&quot;&gt;&lt;a href=&quot;#架构图&quot; class=&quot;headerlink&quot; title=&quot;架构图&quot;&gt;&lt;/a&gt;架构图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;Live-Streaming技术综述/unified-streaming.png&quot; alt=&quot;unified-streaming&quot;&gt;&lt;/p&gt;
&lt;p&gt;系统大致可以分解为如下几部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;音视频的编码。&lt;/li&gt;
&lt;li&gt;将编码后的（实时或VOD）数据给到Streaming Server，Server可以对数据进行DRM加密，转码等。&lt;/li&gt;
&lt;li&gt;Streaming Server根据客户端的请求将数据转化为不同的格式，通过不同的协议分发到客户端。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以参考这里的&lt;a href=&quot;http://info.wowza.com/live-video-streaming-solutions-watch-how-to-video&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;视频&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下面根据数据流的不同阶段来进行分析。&lt;/p&gt;
&lt;h2 id=&quot;技术分析&quot;&gt;&lt;a href=&quot;#技术分析&quot; class=&quot;headerlink&quot; title=&quot;技术分析&quot;&gt;&lt;/a&gt;技术分析&lt;/h2&gt;&lt;h3 id=&quot;音视频的编码和发布&quot;&gt;&lt;a href=&quot;#音视频的编码和发布&quot; class=&quot;headerlink&quot; title=&quot;音视频的编码和发布&quot;&gt;&lt;/a&gt;音视频的编码和发布&lt;/h3&gt;&lt;h4 id=&quot;商业产品&quot;&gt;&lt;a href=&quot;#商业产品&quot; class=&quot;headerlink&quot; title=&quot;商业产品&quot;&gt;&lt;/a&gt;商业产品&lt;/h4&gt;&lt;p&gt;商业产品包括软件和硬件设备，下面主要列举了一些软件，硬件提供的功能和软件类似，并且有些还有辅助的软件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;1. Wirecast&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Wirecast支持多种&lt;a href=&quot;http://www.telestream.net/wirecast/features.htm#capture&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;输入源&lt;/a&gt;，包括WebCam, 视频采集卡，Web Stream, IP Camera等。除了音视频编码外，Wirecast还有许多相关的&lt;a href=&quot;http://www.telestream.net/application-content/wirecast/help/6-0/mac/tutorials.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;辅助功能&lt;/a&gt;，比如不同场景(shot)的切换，音频的组合选择，标题编辑，ScoreBoard，虚拟场景。Wirecast支持多种不同的Streaming平台，并且有一个YouTube的&lt;a href=&quot;http://www.telestream.net/application-content/wirecast/YouTube/help/6-0/mac/index.html#Wirecast_Users_Guide/Tutorials/Tutorials.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;定制版本&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;API支持: Wirecast API并没有提供比UI操作更丰富的&lt;a href=&quot;http://forum.telestream.net/forum/messageview.aspx?catid=44&amp;amp;threadid=10540&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;接口&lt;/a&gt;，mac下可以通过&lt;a href=&quot;http://forum.telestream.net/forum/messageview.aspx?catid=45&amp;amp;threadid=12517&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;applescript控制&lt;/a&gt;，Windows下提供了com接口（有第三方的&lt;a href=&quot;https://github.com/DynamoBen/Wirecast/tree/master/API&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;python API&lt;/a&gt;)，并非一个可以扩展的框架。&lt;/p&gt;
&lt;p&gt;Encoder: H264, X264&lt;/p&gt;
&lt;p&gt;价格: &lt;a href=&quot;http://www.telestream.net/wirecast/store.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Studio $495, Pro $995&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;平台: MAC/WINDOWS&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;2. UStream Producer&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;功能和Wirecast类似。&lt;/p&gt;
&lt;p&gt;价格: &lt;a href=&quot;http://www.telestream.net/wirecast/store.asp&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Studio $279, Pro $549&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;3. Flash Media Live Encoder&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Flash Media Live Encoder支持的输入源包括webcam和视频采集卡，只支持一路视频。没有其他一些辅助功能。&lt;/p&gt;
&lt;p&gt;API:  仅仅提供了&lt;a href=&quot;http://help.adobe.com/en_US/FlashMediaLiveEncoder/3.0/Using/WS5b3ccc516d4fbf351e63e3d11c104babd5-7ffc.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;command line&lt;/a&gt;工具&lt;/p&gt;
&lt;p&gt;Encoder: H264, VP6&lt;/p&gt;
&lt;p&gt;平台: MAC/WINDOWS&lt;/p&gt;
&lt;p&gt;价格: Freeware&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;4. XSplit&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;XSplit输入源包括Screen/Camera，支持多个场景(Scence)，标题编辑等辅助功能。&lt;/p&gt;
&lt;p&gt;Encoder: H264&lt;/p&gt;
&lt;p&gt;API: 无&lt;/p&gt;
&lt;p&gt;平台: WINDOWS&lt;/p&gt;
&lt;p&gt;价格: Personal $39.95/year,  Premium $59.95/year&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;VID Blaster&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;功能和Wirecast类似。&lt;/p&gt;
&lt;h4 id=&quot;开源产品&quot;&gt;&lt;a href=&quot;#开源产品&quot; class=&quot;headerlink&quot; title=&quot;开源产品&quot;&gt;&lt;/a&gt;开源产品&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Open Broadcast Software&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;OBS默认支持的&lt;a href=&quot;https://github.com/jp9000/OBS/wiki/Built-in-Sources&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;输入源&lt;/a&gt;比较有限，但可以通过plugin方式进行扩展。OBS也支持多个场景(&lt;a href=&quot;https://jp9000.github.io/OBS/general/scenes.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scene&lt;/a&gt;)，标题编辑，也支持多种不同的Streaming平台，如&lt;a href=&quot;https://twitchtips.com/obs-setup/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TWITCH&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=dD0Z9VylyU8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;YouTube&lt;/a&gt;。OBS原先只支持&lt;a href=&quot;https://github.com/jp9000/OBS&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Windows&lt;/a&gt;，新版本可以&lt;a href=&quot;https://github.com/jp9000/obs-studio&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;跨平台&lt;/a&gt;，但还不完善。&lt;/p&gt;
&lt;p&gt;API: 提供plugin接口&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;WebcamStudio&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(WebcamStudio)[&lt;a href=&quot;https://code.google.com/p/webcamstudio/]功能和OBS类似，但只运行在linux平台，且现在已经无人维护。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://code.google.com/p/webcamstudio/]功能和OBS类似，但只运行在linux平台，且现在已经无人维护。&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Streaming服务器和cloud平台&quot;&gt;&lt;a href=&quot;#Streaming服务器和cloud平台&quot; class=&quot;headerlink&quot; title=&quot;Streaming服务器和cloud平台&quot;&gt;&lt;/a&gt;Streaming服务器和cloud平台&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;1. WOWZA&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;产品线完整，包含Server和Cloud。支持所有主流的协议(HLS, HDS等)。输入源支持的也非常丰富，并且支持比较多的合作厂商的设备。输入源支持Push和Pull两种方式。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.wowza.com/products/streaming-cloud/features&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Streaming Cloud&lt;/a&gt;现在的API未公开，但看起来操作应该不会超出UI提供的功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.wowza.com/products/streaming-engine&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Streaming Server&lt;/a&gt;非常成熟, &lt;a href=&quot;http://www.wowza.com/resources/WowzaStreamingEngine_ServerSideAPI.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;API&lt;/a&gt;非常丰富(复杂)。Server的部署和分发也提供相应的&lt;a href=&quot;http://www.wowza.com/products/streaming-engine/deployment-options&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;支持&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;另外WOWZA还提供了&lt;a href=&quot;http://www.wowza.com/products/streaming-engine/deployment-options&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GeoIP&lt;/a&gt;的数据库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;2. Kaltura&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://knowledge.kaltura.com/live-streaming-using-kaltura-live-streaming-hds-hls-dash&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kaltura&lt;/a&gt;的功能类似，也有服务器和cloud产品，从介绍上来看也非常完善。Kaltura是一套&lt;a href=&quot;https://github.com/kaltura&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开源&lt;/a&gt;的解决方案，也提供&lt;a href=&quot;http://corp.kaltura.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;商业服务&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;3. UStream&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ustream.tv/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ustream&lt;/a&gt;仅仅提供Cloud服务，没有Server，但是却提供了Client的library，包括Android/iOS/Roku。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;4. Youtube&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Youtube也仅仅提供Cloud服务，没有Server。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;5. JWPlayer&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;原先只是flash播放器，现在也在提供cloud服务。&lt;/p&gt;
&lt;h2 id=&quot;产品架构选型&quot;&gt;&lt;a href=&quot;#产品架构选型&quot; class=&quot;headerlink&quot; title=&quot;产品架构选型&quot;&gt;&lt;/a&gt;产品架构选型&lt;/h2&gt;&lt;h3 id=&quot;需求分析&quot;&gt;&lt;a href=&quot;#需求分析&quot; class=&quot;headerlink&quot; title=&quot;需求分析&quot;&gt;&lt;/a&gt;需求分析&lt;/h3&gt;&lt;p&gt;能动态的根据用户相关的数据来实时生成广告版。现有的支持音视频编辑的软件可以mix多路视频，但这些都是在客户端发布视频之前做的，而用户相关的数据只有服务器端才有，所以需要在服务器端做mix。&lt;/p&gt;
&lt;h2 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Dynamic Streaming&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP scalability&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP caching&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Trickplay&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alternate video/audio track&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Text streams&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rough cut editing&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ad insertion&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Network DVR(Digital Video Recorder)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stream recording&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DRM(Digital Rights Management)&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;客户端&quot;&gt;&lt;a href=&quot;#客户端&quot; class=&quot;headerlink&quot; title=&quot;客户端&quot;&gt;&lt;/a&gt;客户端&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;JW Player&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Flowplayer&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;协议&quot;&gt;&lt;a href=&quot;#协议&quot; class=&quot;headerlink&quot; title=&quot;协议&quot;&gt;&lt;/a&gt;协议&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;UDP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TCP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RTSP/RTP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTTP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Apple HLS&lt;/strong&gt;: HTTP Live Streaming&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Adobe HDS&lt;/strong&gt;: HTTP Dynamic Streaming&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Microsoft Smooth Streaming&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MPEG-TS&lt;/strong&gt;: MPEG-2 Transport Streams，多用于IPTV&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MPEG-DASH Streaming&lt;/strong&gt;: Moving Picture Experts Group Dynamic Adaptive Streaming over HTTP&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MPD&lt;/strong&gt;: Media Presenation Descriptino&lt;/p&gt;
&lt;h2 id=&quot;名词解析&quot;&gt;&lt;a href=&quot;#名词解析&quot; class=&quot;headerlink&quot; title=&quot;名词解析&quot;&gt;&lt;/a&gt;名词解析&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;ABR&lt;/strong&gt;: Adaptive bitrate streaming通过监测下行带宽的变化或用户的操作来自动适应带宽变化或屏幕大小变化。为了保证平滑的切换不同质量的视频，ABR对encoder是有一定要求的，需要编码的时候不同质量的关键帧能同步。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SMIL&lt;/strong&gt;: Synchronized Multimedia Integration Language用来描述视频源可用的bitrate和size等配置，client可以根据这些配置来选择不同质量的视频。Mobile客户端和Desktop客户端一般会有不同的配置，不同的平台也有特定的要求（iOS bitrate不超过64 kbps)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DASH&lt;/strong&gt;: Dynamic Adaptive Streaming over HTTP&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HbbTV&lt;/strong&gt;: Hybrid Broadcast Broadband TV&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Container&lt;/strong&gt;: 容器就是把编码器生成的多媒体内容（视频，音频，字幕，章节信息等）混合封装在一起的标准。容器使得不同多媒体内容同步播放变得很简单，而容器的另一个作用就是为多媒体内容提供索引，也就是说如果没有容器存在的话一部影片你只能从一开始看到最后，不能拖动进度条（当然这种情况下有的播放器会话比较长的时间临时创建索引），而且如果你不自己去手动另外载入音频就没有声音。&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://info.wowza.com/abr-white-paper&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Adaptive Bitrate Streaming with Wowza Streaming Engine&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://info.wowza.com/mediacache-white-paper&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Media Cache White Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://info.wowza.com/tv-anywhere-white-paper&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TV Anywhere White Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.dacast.com/white-papers/smb-market-for-paid-video-streaming-services/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SMB Market For Paid Video Streaming Services&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/wiliwe/streaming-media-server-setup-manual&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;streaming media server setup manual&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Live-Streaming技术综述&quot;&gt;&lt;a href=&quot;#Live-Streaming技术综述&quot; class=&quot;headerlink&quot; title=&quot;Live Streaming技术综述&quot;&gt;&lt;/a&gt;Live Streaming技术综述&lt;/h1&gt;&lt;h2 id=&quot;架
    
    </summary>
    
    
      <category term="Live Streaming" scheme="http://jiantaofu.github.io/tags/Live-Streaming/"/>
    
  </entry>
  
  <entry>
    <title>吉他和弦基础理论</title>
    <link href="http://jiantaofu.github.io/2015/05/31/%E5%90%89%E4%BB%96%E5%92%8C%E5%BC%A6%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA/"/>
    <id>http://jiantaofu.github.io/2015/05/31/吉他和弦基础理论/</id>
    <published>2015-05-31T20:40:36.000Z</published>
    <updated>2016-05-09T02:22:42.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;吉他和弦基础理论&quot;&gt;&lt;a href=&quot;#吉他和弦基础理论&quot; class=&quot;headerlink&quot; title=&quot;吉他和弦基础理论&quot;&gt;&lt;/a&gt;吉他和弦基础理论&lt;/h1&gt;&lt;h2 id=&quot;音符&quot;&gt;&lt;a href=&quot;#音符&quot; class=&quot;headerlink&quot; title=&quot;音符&quot;&gt;&lt;/a&gt;音符&lt;/h2&gt;&lt;p&gt;音乐有12个音符(Note)，每个音符之间隔一个半音，比如B和C之间就隔一个半音(H)，A和B之间隔一个全音(W, 即两个半音):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&amp;#9839;/B&amp;#9837;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&amp;#9839;/D&amp;#9837;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&amp;#9839;/E&amp;#9837;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&amp;#9839;/G&amp;#9837;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;G&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;G&amp;#9839;/A&amp;#9837;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt; 1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;5&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;6&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;7&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;8&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;9&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;12&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt; 音符在吉他上的位置，从左到右对应0-12个音格(Fred)，从上到下对应1-6弦：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;0&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;2&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;3&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;4&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;5&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;6&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;7&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;8&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;9&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;10&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;11 &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&amp;#9839;/G&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&amp;#9839;/A&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&amp;#9839;/B&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&amp;#9839;/D&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&amp;#9839;/E&amp;#9837; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&amp;#9839;/D&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&amp;#9839;/E&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&amp;#9839;/G&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&amp;#9839;/A&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&amp;#9839;/B&amp;#9837; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&amp;#9839;/A&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&amp;#9839;/B&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&amp;#9839;/D&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&amp;#9839;/E&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&amp;#9839;/G&amp;#9837; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&amp;#9839;/E&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&amp;#9839;/G&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&amp;#9839;/A&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&amp;#9839;/B&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&amp;#9839;/D&amp;#9837; &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&amp;#9839;/B&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&amp;#9839;/D&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&amp;#9839;/E&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&amp;#9839;/G&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&amp;#9839;/A&amp;#9837;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&amp;#9839;/G&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&amp;#9839;/A&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&amp;#9839;/B&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&amp;#9839;/D&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&amp;#9839;/E&amp;#9837; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;音阶-Scale&quot;&gt;&lt;a href=&quot;#音阶-Scale&quot; class=&quot;headerlink&quot; title=&quot;音阶(Scale)&quot;&gt;&lt;/a&gt;音阶(Scale)&lt;/h2&gt;&lt;p&gt;常见的有大调音阶和小调音阶，它们的区别在于全音(W)和半音(H)的排列顺序不同，而这种不同的顺序会带来不同的风格。在演奏音乐时，如果要转调，需要注意转调后的音阶时不变的，所以需要对某些音做升降处理。&lt;/p&gt;
&lt;h3 id=&quot;大调-Major-音阶&quot;&gt;&lt;a href=&quot;#大调-Major-音阶&quot; class=&quot;headerlink&quot; title=&quot;大调(Major)音阶&quot;&gt;&lt;/a&gt;大调(Major)音阶&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;H&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;H &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;C大调&quot;&gt;&lt;a href=&quot;#C大调&quot; class=&quot;headerlink&quot; title=&quot;C大调&quot;&gt;&lt;/a&gt;C大调&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;2&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;3&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;4&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;5&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;6&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;7&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;F大调&quot;&gt;&lt;a href=&quot;#F大调&quot; class=&quot;headerlink&quot; title=&quot;F大调&quot;&gt;&lt;/a&gt;F大调&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;2&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;3&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;4&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;5&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;6&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;7&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;小调-Minor-音阶&quot;&gt;&lt;a href=&quot;#小调-Minor-音阶&quot; class=&quot;headerlink&quot; title=&quot;小调(Minor)音阶&quot;&gt;&lt;/a&gt;小调(Minor)音阶&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;H&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;H&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;A小调&quot;&gt;&lt;a href=&quot;#A小调&quot; class=&quot;headerlink&quot; title=&quot;A小调&quot;&gt;&lt;/a&gt;A小调&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;2&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;3&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;4&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;5&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;6&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;7&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;C小调&quot;&gt;&lt;a href=&quot;#C小调&quot; class=&quot;headerlink&quot; title=&quot;C小调&quot;&gt;&lt;/a&gt;C小调&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;2&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;3&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;4&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;5&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;6&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;7&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&amp;nbsp; &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这里介绍的是自然小调，除此之外还有旋律小调和和声小调。&lt;/p&gt;
&lt;h3 id=&quot;Seventh-Dominant音阶&quot;&gt;&lt;a href=&quot;#Seventh-Dominant音阶&quot; class=&quot;headerlink&quot; title=&quot;Seventh Dominant音阶&quot;&gt;&lt;/a&gt;Seventh Dominant音阶&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&amp;nbsp;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;H&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;H&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;W&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Seventh音阶是在大调(Major)音阶基础上，将大调音阶的第七个音降半音演化过来的。&lt;/p&gt;
&lt;h4 id=&quot;C7&quot;&gt;&lt;a href=&quot;#C7&quot; class=&quot;headerlink&quot; title=&quot;C7&quot;&gt;&lt;/a&gt;C7&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;2&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;3&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;4&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;5&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;6&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;7&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&amp;nbsp;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&amp;#9837;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;和弦的演变&quot;&gt;&lt;a href=&quot;#和弦的演变&quot; class=&quot;headerlink&quot; title=&quot;和弦的演变&quot;&gt;&lt;/a&gt;和弦的演变&lt;/h2&gt;&lt;p&gt;和弦的三大类: Majors, Minors和Seventh，一个音阶有12个音符，以每个音符为主音有三种和弦，那么就有12 * 3 = 36种基本和弦。&lt;/p&gt;
&lt;h3 id=&quot;Major和弦&quot;&gt;&lt;a href=&quot;#Major和弦&quot; class=&quot;headerlink&quot; title=&quot;Major和弦&quot;&gt;&lt;/a&gt;Major和弦&lt;/h3&gt;&lt;p&gt;从C大调音阶里面挑选出C, E, G就构成了C和弦。可以看到下面的C和弦弹奏的音符从上到下（6－1弦）分别为C, E, G, C, E&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chordgenerator.net/Cmaj.png?p=x32010&amp;amp;f=-32-1-&amp;amp;s=3&quot; alt=&quot;CMajor&quot;&gt;&lt;/p&gt;
&lt;p&gt;下面是C和弦的另外一个版本:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chordgenerator.net/Cmaj.png?p=8-10-10-9-8-8&amp;amp;f=134211&amp;amp;s=3&quot; alt=&quot;CMajor&quot;&gt;&lt;/p&gt;
&lt;p&gt;虽然复杂了很多，但弹奏的音符还是C, E, G三个音，从上到下（6－1弦）分别为C, G, C, E, E, G, C&lt;/p&gt;
&lt;p&gt;从C Major基础和弦演化，加入C大调音阶的第6个音A，就构成了CMaj6和弦&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chordgenerator.net/Cmaj6.png?p=x35555&amp;amp;s=3&quot; alt=&quot;CMajor&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Minor和弦&quot;&gt;&lt;a href=&quot;#Minor和弦&quot; class=&quot;headerlink&quot; title=&quot;Minor和弦&quot;&gt;&lt;/a&gt;Minor和弦&lt;/h3&gt;&lt;p&gt;从C小调音阶里面挑选出C, E&amp;#9837;, G就构成了C和弦。可以看到下面的C Minor和弦弹奏的音符从上到下（6－1弦）分别为C, E&amp;#9837;, G, C&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chordgenerator.net/Cmin.png?p=x3101x&amp;amp;s=3&quot; alt=&quot;CMinor&quot;&gt;&lt;/p&gt;
&lt;p&gt;下面是C Minor和弦的另外一个版本:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chordgenerator.net/Cmin.png?p=x35543&amp;amp;f=-13421&amp;amp;s=3&quot; alt=&quot;CMinor&quot;&gt;&lt;/p&gt;
&lt;p&gt;从C Minor基础和弦演化，加入C小调音阶的第7个音B&amp;#9837;，就构成了C Minor7和弦&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chordgenerator.net/Cmin7.png?p=x3131x&amp;amp;f=-3141-&amp;amp;s=3&quot; alt=&quot;CMinor7&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Seventh和弦&quot;&gt;&lt;a href=&quot;#Seventh和弦&quot; class=&quot;headerlink&quot; title=&quot;Seventh和弦&quot;&gt;&lt;/a&gt;Seventh和弦&lt;/h3&gt;&lt;p&gt;Seventh和弦是在Major和弦基础上，加上大调音阶的第七个音降半音演化过来的。&lt;/p&gt;
&lt;p&gt;C7和弦的构成: C, E, G, B&amp;#9837;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://chordgenerator.net/C7.png?p=x32310&amp;amp;f=-3241-&amp;amp;s=3&quot; alt=&quot;CMajor&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;超出一个音阶的和弦&quot;&gt;&lt;a href=&quot;#超出一个音阶的和弦&quot; class=&quot;headerlink&quot; title=&quot;超出一个音阶的和弦&quot;&gt;&lt;/a&gt;超出一个音阶的和弦&lt;/h3&gt;&lt;p&gt;和弦还可以扩展超出一个音阶：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;2&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;3&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;4&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;5&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;6&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;7&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;9&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;3&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;11&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;5&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;13&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;7&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;D&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;E&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;F&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;G&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;C&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;C9和弦的构成: C, E, G, B&amp;#9837;, D&lt;/p&gt;
&lt;p&gt;C13和弦的构成: C, E, G, B&amp;#9837;, D, A&lt;/p&gt;
&lt;p&gt;C7&amp;#9837;9和弦的构成: C, E, G, B&amp;#9837;, D&amp;#9837;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/BASIC-CHORDS-GUITAR-Basic-Series/dp/1860743633&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Basic Chords For Guitar&lt;/a&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://einaregilsson.com/chord-image-generator/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chord Image Generator&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.tipbook.com/index.php?option=com_content&amp;amp;view=article&amp;amp;id=83:tipcodes-music-on-paper&amp;amp;catid=85:tipcodes-en&amp;amp;lang=en&amp;amp;Itemid=527&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tipcodes Music On Paper&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      吉他和弦基础理论
    
    </summary>
    
    
      <category term="吉他, 和弦" scheme="http://jiantaofu.github.io/tags/%E5%90%89%E4%BB%96-%E5%92%8C%E5%BC%A6/"/>
    
  </entry>
  
</feed>
